@import (reference) './mixins';

@split-size: 6px;

.mosaic {
  height: 100%;
  width: 100%;

  &,
  > * {
    box-sizing: border-box;
  }

  .mosaic-zero-state {
    @padding: @split-size;
    .absolute-fill(@padding, @padding, @padding, @padding);
    width: auto;
    height: auto;
    z-index: 1;
  }
}

.mosaic-root {
  @size: @split-size / 2;
  .absolute-fill(@size, @size, @size, @size);
}

.mosaic-split {
  position: absolute;
  z-index: 1;
  touch-action: none;

  &:hover {
    background: black;
  }

  .mosaic-split-line {
    position: absolute;
  }

  &.-row {
    margin-left: -@split-size / 2;
    width: @split-size;
    cursor: ew-resize;

    .mosaic-split-line {
      top: 0;
      bottom: 0;
      left: @split-size / 2;
      right: @split-size / 2;
    }
  }

  &.-column {
    margin-top: -@split-size / 2;
    height: @split-size;
    cursor: ns-resize;

    .mosaic-split-line {
      top: @split-size / 2;
      bottom: @split-size / 2;
      left: 0;
      right: 0;
    }
  }
}

.mosaic-tile {
  position: absolute;
  margin: @split-size / 2;

  > * {
    height: 100%;
    width: 100%;
  }
}

.split-percentages(@split-amount) {
  @amount: ~'calc(100% - ' @split-amount ~')';
  &.left {
    right: @amount;
  }
  &.right {
    left: @amount;
  }
  &.bottom {
    top: @amount;
  }
  &.top {
    bottom: @amount;
  }
}

.mosaic-drop-target {
  position: relative;

  &.drop-target-hover .drop-target-container {
    display: block;
  }

  &.mosaic > .drop-target-container .drop-target {
    .split-percentages(10px);
  }

  .drop-target-container {
    .absolute-fill();
    display: none;

    &.-dragging {
      display: block;
    }

    .drop-target {
      .absolute-fill();
      .split-percentages(30%);
      background: fade(black, 20%);
      border: 2px solid black;
      opacity: 0;
      z-index: 5;

      &.drop-target-hover {
        opacity: 1;
        .split-percentages(50%);
      }
    }
  }
}

.mosaic-tabs-container {
  .mosaic-tab-bar {
    display: flex;
    align-items: center;
    position: relative;
  }
}

// Pulse animation for drop placeholder
@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0.9;
  }
}

// Simple, compact tab styling
.mosaic-tab-button {
  background: transparent;
  border: none;
  padding: 4px 12px;
  margin: 0;
  font-size: 12px;
  font-weight: normal;
  color: var(--text-muted, #666);
  cursor: pointer;
  outline: none !important; // Force remove all focus outlines
  user-select: none;
  white-space: nowrap;
  transition: color 0.1s ease;
  
  &:hover {
    color: var(--text-primary, #333);
  }

  &.-active {
    color: var(--text-primary, #333);
    border-bottom: 2px solid var(--accent-color, #007ACC);
  }

  &.-dragging {
    opacity: 0.5;
  }

  // Remove focus outline completely
  &:focus {
    outline: none !important;
  }

  // Only show focus for keyboard navigation (when using .focus-visible class)
  &.focus-visible {
    outline: 2px solid var(--accent-color, #007ACC) !important;
    outline-offset: 2px;
  }
}

// Simple tab bar
.mosaic-tab-bar {
  background: var(--bg-secondary, #f5f5f5);
  border-bottom: 1px solid var(--border-color, #ddd);
  display: flex;
  align-items: flex-end;
  min-height: 28px;
  padding: 0 4px;
}

// Auto dark theme support
.mosaic-blueprint-theme.bp5-dark .mosaic-tab-bar {
  --bg-secondary: #2d3748;
  --border-color: #4a5568;
  --text-primary: #e2e8f0;
  --text-muted: #a0aec0;
  --accent-color: #63b3ed;
}

// Add tab button - minimal
.mosaic-tab-add-button {
  background: transparent;
  border: none;
  padding: 4px 8px;
  margin-left: 8px;
  color: var(--text-muted, #666);
  cursor: pointer;
  font-size: 14px;
  font-weight: normal;
  outline: none !important; // Force remove all focus outlines
  
  &:hover {
    color: var(--accent-color, #007ACC);
  }
  
  // Remove focus outline completely
  &:focus {
    outline: none !important;
  }

  // Only show focus for keyboard navigation (when using .focus-visible class)
  &.focus-visible {
    outline: 2px solid var(--accent-color, #007ACC) !important;
    outline-offset: 2px;
  }
}

// Tab drop target styles
.tab-drop-target {
  height: 100%;
  min-height: 28px;
  position: relative;
  background: transparent;
  transition: all 0.2s ease;
  flex-shrink: 0;
  cursor: pointer;
  display: none; // Hidden by default, shown when dragging
  align-items: center;
  justify-content: center;
  z-index: 1000;
  width: 2px; // Default width when not dragging

  &.tab-drop-target-hover {
    width: 40px; // Expanded width when hovering during drag
  }

  // When any item is being dragged, show the drop targets
  &.dragging {
    display: flex;
    width: 20px; // Medium width when dragging but not hovering
  }

  // Drop placeholder when hovering during drag
  .tab-drop-placeholder {
    width: 32px;
    height: 24px;
    background: linear-gradient(135deg, #007ACC, #0099FF);
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 122, 204, 0.3);
    border: 2px dashed white;
    opacity: 0.9;
    animation: pulse 1s infinite;

    .tab-drop-arrow {
      width: 0;
      height: 0;
      border-left: 4px solid transparent;
      border-right: 4px solid transparent;
      border-top: 6px solid white;
      opacity: 0.8;
    }
  }

  // Subtle indicator when not hovering
  .tab-drop-indicator {
    width: 2px;
    height: 20px;
    border-radius: 1px;
    transition: all 0.2s ease;

    &.can-drop {
      background: rgba(0, 122, 204, 0.2);
    }

    &.default {
      background: rgba(0, 0, 0, 0.1);
    }
  }
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}


